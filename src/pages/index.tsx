import type { NextPage } from "next";
import { useState } from "react";
import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/react";
import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
  const { data: session, status } = useSession();
  const [message, setMessage] = useState("");
  const ctx = trpc.useContext();
  const postMessage = trpc.useMutation("guestbook.postMessage", {
    onMutate: () => {
      ctx.cancelQuery(["guestbook.getAll"]);
      let optimisticUpdate = ctx.getQueryData(["guestbook.getAll"]);
      if (optimisticUpdate) {
        ctx.setQueryData(["guestbook.getAll"], optimisticUpdate);
      }
    },
    onSettled: () => {
      ctx.invalidateQueries(["guestbook.getAll"]);
    },
  });

  if (status === "loading") {
    return (
      <main className="container mx-auto flex min-h-screen flex-col items-center justify-center p-4">
        Loading...
      </main>
    );
  }
  return (
    <>
      <Head>
        <title>Dreyfus Guestbook</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container mx-auto flex min-h-screen flex-col items-center justify-center p-4">
        <h1 className="text-3xl mb-4">Guestbook</h1>
        {session ? (
          <div>
            <div>
              <p> Hi {session.user?.name}</p>
              <button
                className="group relative inline-block text-sm font-medium text-white focus:outline-none focus:ring"
                onClick={() => signOut()}
              >
                <span className="absolute inset-0 border border-red-600 group-active:border-red-500"></span>
                <span className="block border border-red-600 bg-red-600 px-12 py-3 transition-transform active:border-red-500 active:bg-red-500 group-hover:-translate-x-1 group-hover:-translate-y-1">
                  Logout
                </span>
              </button>
            </div>
            <div className="pt-10">
              <form
                className="flex gap-2"
                onSubmit={(e) => {
                  e.preventDefault();

                  postMessage.mutate({
                    name: session?.user?.name as string,
                    message,
                  });
                  setMessage("");
                }}
              >
                <input
                  type="text"
                  value={message}
                  placeholder="Insert message..."
                  maxLength={100}
                  onChange={(e) => setMessage(e.target.value)}
                  className="px-4 py-2 rounded-md border-2 border-zing-800 bg-neutral-900 focus:outline-none"
                />
                <button
                  type="submit"
                  className="group relative inline-block text-sm font-medium text-white focus:outline-none focus:ring"
                >
                  <span className="absolute inset-0 border border-red-600 group-active:border-red-500"></span>
                  <span className="block border border-red-600 bg-red-600 px-12 py-3 transition-transform active:border-red-500 active:bg-red-500 group-hover:-translate-x-1 group-hover:-translate-y-1">
                    Submit
                  </span>
                </button>
              </form>
            </div>
            <div className="pt-10">
              <Messages />
            </div>
          </div>
        ) : (
          <div>
            <button
              className="group relative inline-block text-sm font-medium text-white focus:outline-none focus:ring"
              onClick={() => signIn("discord")}
            >
              <span className="absolute inset-0 border border-red-600 group-active:border-red-500"></span>
              <span className="block border border-red-600 bg-red-600 px-12 py-3 transition-transform active:border-red-500 active:bg-red-500 group-hover:-translate-x-1 group-hover:-translate-y-1">
                Login with Discord
              </span>
            </button>
            <div className="pt-10">
              <Messages />
            </div>
          </div>
        )}
      </main>
    </>
  );
};

export default Home;

const Messages = () => {
  const { data: messages, isLoading } = trpc.useQuery(["guestbook.getAll"]);

  if (isLoading) return <div>Fetching messages...</div>;

  return (
    <div className="flex flex-col gap-4">
      {messages?.map((msg, index) => {
        return (
          <div key={index}>
            <p>{msg.message}</p>
            <span>- {msg.name}</span>
          </div>
        );
      })}
    </div>
  );
};
